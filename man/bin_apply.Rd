% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bin-apply.R
\name{bin_apply}
\alias{bin_apply}
\alias{bin_apply_all}
\title{Bin a variable (typically time) and compute an aggregate for each bin}
\usage{
bin_apply(data, y, x = t, x_bin_length = mins(30), wrap_x_by = NULL,
  FUN = mean, string_xy = FALSE, ...)

bin_apply_all(data, ...)
}
\arguments{
\item{data}{\link{data.table} or \link{behavr} table (see details)}

\item{y}{variable to be aggregated}

\item{x}{variable to be binned}

\item{x_bin_length}{length of the bins (same unit as `x``)}

\item{wrap_x_by}{numeric value defining wrapping period. \code{NULL}, the defsult, means no wrapping.}

\item{FUN}{function used to aggregate (e.g. \link{mean}, \link{median}, \link{sum} and so on)}

\item{string_xy}{logical whether the names of the variables are quoted}

\item{...}{additional arguments to be passed to \code{FUN}}
}
\description{
This function is typically used to summarise (i.e. computing an aggreate of) a variable (\code{y})
for bins of a another variable \code{x} (typically time).
}
\details{
\code{bin_apply} expects data from a single individal.
\code{bin_apply_all} works on multiple individuals identified by a unique key.
\code{wrapping} is typically used to compute averages accross several periods.
For instance,\code{wrap_x_by = days(1)}, means bins will aggreate values accross several days.
In this case, the resulting x can be interpreted as "time relative to the onset of the day" (i.e. ZT).
}
\examples{
query <- data.frame(experiment_id = "toy_experiment",
                      region_id = 1:5)
dt <- toy_activity_data(query, duration = days(4))

# average by 30min time bins, default
dt_binned <- bin_apply_all(dt, moving)
# equivalent to
dt_binned <- dt[, bin_apply(.SD, moving), by = "id"]

# More advanced usage
dt <- toy_dam_data(query, duration = days(4))

# nsum activity per 60 minutes
dt_binned <- bin_apply_all(dt,
                           activity,
                           x = t,
                           x_bin_length = mins(60),
                           FUN = sum)


# average activity. time in ZT
dt_binned <- bin_apply_all(dt,
                           activity,
                           x = t,
                           wrap_x_by = days(1)
                           )
}
